name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest numpy pandas scikit-learn
        
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run Linear Regression Tests
      run: |
        python linear_regression.py
        
    - name: Run Polynomial Regression Tests
      run: |
        python polynomial_regression.py

  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        parameters:
          height: [[12.0], [15.0]]
          x: [[11], [14]]
          poly_x: [[20.0], [25.0]]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas scikit-learn

    - name: Test Linear Regression with different heights
      run: |
        echo "Running linear regression with height: ${{ matrix.parameters.height }}"
        python -c "from linear_regression import reg; print(reg.predict(${matrix.parameters.height}))"

    - name: Test Polynomial Regression with different inputs
      run: |
        echo "Running polynomial regression with x: ${{ matrix.parameters.x }}"
        python -c "from polynomial_regression import lin_reg; print(lin_reg.predict(${matrix.parameters.x}))"

    - name: Test Polynomial Regression with different polynomial inputs
      run: |
        echo "Running polynomial regression with polynomial X_height: ${{ matrix.parameters.poly_x }}"
        python -c "from polynomial_regression import polynomial_regression; print(polynomial_regression.predict(${matrix.parameters.poly_x}))"
